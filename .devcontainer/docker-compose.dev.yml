version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        NODE_VERSION: 20
    container_name: stories-collector-dev
    volumes:
      - ..:/workspace:cached
    working_dir: /workspace
    command: sleep infinity
    environment:
      DATABASE_URL: postgresql://stories_user:stories_pass@postgres:5432/stories_collector?schema=public
      REDIS_URL: redis://redis:6379
      NEXT_PUBLIC_APP_URL: http://localhost:3000
      NODE_ENV: development
      CHOKIDAR_USEPOLLING: 'true'
      WATCHPACK_POLLING: 'true'
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - dev_network

  postgres:
    image: postgres:16-alpine
    container_name: stories-collector-postgres-dev
    restart: unless-stopped
    environment:
      POSTGRES_USER: stories_user
      POSTGRES_PASSWORD: stories_pass
      POSTGRES_DB: stories_collector
      POSTGRES_INITDB_ARGS: '-E UTF8'
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    networks:
      - dev_network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U stories_user -d stories_collector']
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: stories-collector-redis-dev
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_dev_data:/data
    ports:
      - '6379:6379'
    networks:
      - dev_network
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  dev_network:
    driver: bridge

volumes:
  postgres_dev_data:
  redis_dev_data:
